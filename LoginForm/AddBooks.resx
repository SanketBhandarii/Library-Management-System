<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>